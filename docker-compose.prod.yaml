version: '3.5'

### DOCKER COMPOSE PROD (extends BASE) ###
#
# Here, we define all the stuff needed in addition to the base compose configuration to make the app work on a
# remote server in a production configuration.
#

services:
  traefik:
    image: "traefik:v2.3"
    networks:
      - semapps
    command:
      # - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=myEmail@myemail.fr"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      # - "8080:8080"
    volumes:
      - "./data/letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  fuseki:
    container_name: fuseki

  middleware:
    image: registry.gitlab.com/transiscope-nantes/deploy-archipelago-nantes/middleware:${MIDDLEWARE_VERSION:-latest}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.middleware.rule=Host(`data.nantes.transiscope.org`)"
      - "traefik.http.routers.middleware.entrypoints=websecure"
      - "traefik.http.routers.middleware.tls.certresolver=myresolver"

  frontend:
    image: registry.gitlab.com/transiscope-nantes/deploy-archipelago-nantes/frontend:${FRONTEND_VERSION:-latest}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`nantes.transiscope.org`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"

  redis:
    container_name: redis
